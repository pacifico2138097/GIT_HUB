
''' 
Given two strings s and t of equal length, the Hamming distance between s and t, denoted dH(s,t), is the number of corresponding symbols that differ in s and t. See Figure 2.

Given: Two DNA strings s and t of equal length (not exceeding 1 kbp).
Return: The Hamming distance dH(s,t).
'''
# Function computing hamming distances between s,t:
def hamming_distance(s,t):

    if len(s) != len(t):
       print ("ERROR: STRINGS MUST BE OF EQUALL LENGTH !!!")

    count_diff_char = 0
    
    for i in range (len(s)):
        if s[i] != t[i]:
            count_diff_char += 1

    return count_diff_char

s = 'CTATATGCACTCACCTGTGTATCGAAACGGACACCGGTTTGTGGCTCCCCTAAGTGTGTGTGTGGAACGAGGCGCTACAAATGGCACTTTGGTGTTAACGCGACCAGTCAGACGTACTTGCGACCATCCGTTCTAGCGCGGCGCATATTCCGATGTACCGTAACCCATGTGAAAGATATCTCCGCACCGAAATGATGGACATGAGGCTGCTGGCGACGCTCATGGACATCCAGGGTCCATTCTTGGAGAACGCTGACACGAATTCGCTTCAAACGGTGTATGCGTCAAGAAACACCATGCCTGTTAAGATGAAGTTTAAGGGGCACTCCGGTAAGGCGACGTCCAGTTTCGGCGAATTGGCACAAGACCGCGCATAGGTATCATCCGTTGTGCGACAAGTGATTAACACATCTCTCTTCAGGACCTCCATGACACCCATCTAAGGACTATGGTACAAGATGCCGCCTGTTAGCAGTCTGGAGGACAGGGTACCGGGCCATTCCATGACACTCGGGCATCGCGTTCGCCACCGGGCGAGCTACTGCGGATCTCGCATATACGATCGTCCCCCGGCGCGGATAAAACCAGACACCCAGTTGCAACAACATCCACGGTTGGTTTGGGTTGCCTCTGCTAAAGCTGGTAATAGGCCGGGCATAGTATTTTCGCGAGGCAAGTGCGTTGACGTTCTAGATTGGTTTCCAGAGGGCTGCATGGCACAAGCCCCAGGCGTAAGGTACTTCTGGTCCAACTTCGTGACCTCATGCTAGAACGCTGATGAACAGTGACGCCGACAAGAGCGCGCAGTATCCCTCAGCCGGTCAAACGGTTCGTTCGTGATATGATGTCTATGCTGATCTGCCTGAATGGCGTTACTAGCAGTCCCCTTCTGTTGATATCGCGCTTAGTCATAT'
t = 'TAACTTCTACTCACCATTGTATCACAATGCTCCTCGAGGAATTTCCGTAACCATTATGTATTGGGAAGGCGACCCTACAATCGGCACTTGCCTATTGTTCAAACAGGTTCGGCGTTCTTCGGACCACCCCTGTAGGCCCAGGTCTTCTTAGGAGGTGGCATGGCCCCTCCTACGGACATAACCGCACCGAAATTATGGGCATAAGGTTGCGAGATACGACCTGAGACATCCAGGTTTTATTCTTGAGGAACGCTGCACCGAATTCCTTGAAACCCGTGAATGCGTCCCACGATACCAAGCGTTGCAACAAGCTCTGAAAGACGCAAGCTGGTGAGGCCTGGTCTATAGTTGCAGAATACTCTGAAGCGGATTCCTCAGAATAGGCAGTTGACTGAACAGCGAATACCGCCGCCCTCTCTGGTCCGAACTGGGCAACCTTCCGGTGGCAGTGGTGATTGTCGGTTTGTGTAAGAAGTCTCTAGAAGCATAGTACGTGCCCTGAGCTCAGAGTCCTGAAGGGTGTTTCTCCACAGACCTGCCTCCTGGGGTCGCCCATGTCCAATCGCCCCCCGCGGGGGATTAAAGAACAACTGACGAAAGGACAATATATGCTCCGGATTAGAGAATACGTTCCATAATATGAAGATAATGTCTAAAAATGATCTTGGTTGAAGGAGTGGGTTTCGGGACATGTTTGATTTCCTACGCAGACCAAGCGACTAGCACCGGGCGTAGGGTTTGCATAAGTTGCTCTAGGGATCCCGTGGGATACCGCGGAAGAATCGAGGCATCGACACAATCGTAAGAAGTACCAATGACACTCATCCAACTCGCTCGAGATAACACGCCTATAGAGAAAGGCTTGAATAGAGATTCAAACTGTCTCCATCTGCTGCGAACGGGGTTACAAAGAT'

result = hamming_distance(s,t)
print(result)
    
   

